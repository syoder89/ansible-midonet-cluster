zookeeper_hosts = "{% for host in zookeeper_hosts %}{{ hostvars[host]['ansible_ssh_host'] }}:2181{% if not loop.last %},{% endif %}{% endfor %}"
zookeeper.use_new_stack=true
cassandra.servers= "{% for host in cassandra_hosts %}{{ hostvars[host]['ansible_ssh_host'] }}:9042{% if not loop.last %},{% endif %}{% endfor %}"
cassandra.replication_factor={% if cassandra_hosts|length < 3 %}1{% else %}3{% endif %}

cassandra.cluster="{{ cassandra_cluster }}"
agent.midolman.bgp_keepalive=1s
agent.midolman.bgp_holdtime=3s
agent.midolman.bgp_connect_retry=1s
agent.midolman.lock_memory=false
agent.midolman.dhcp_mtu={{ dhcp_mtu }}
agent.loggers.root=DEBUG
agent.haproxy_health_monitor.namespace_cleanup=true
agent.haproxy_health_monitor.health_monitor_enable=true
agent.haproxy_health_monitor.haproxy_file_loc=/etc/midolman/l4lb/
cluster.auth.provider_class="org.midonet.cluster.auth.keystone.v2_0.KeystoneService"
cluster.auth.admin_role="{{ keystone_username }}"
cluster.auth.keystone.tenant_name="{{ keystone_project }}"
cluster.auth.keystone.user_name ="{{ keystone_username }}"
cluster.auth.keystone.user_password ="{{ keystone_password }}"
cluster.auth.keystone.host="{{ keystone_host }}"
cluster.auth.keystone.port={{ keystone_port }}
